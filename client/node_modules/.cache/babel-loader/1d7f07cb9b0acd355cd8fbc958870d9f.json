{"ast":null,"code":"import _regeneratorRuntime from \"/Users/blaineanderson/Coding/CRAE_2019_Skeleton/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/blaineanderson/Coding/CRAE_2019_Skeleton/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/blaineanderson/Coding/CRAE_2019_Skeleton/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/blaineanderson/Coding/CRAE_2019_Skeleton/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/blaineanderson/Coding/CRAE_2019_Skeleton/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/blaineanderson/Coding/CRAE_2019_Skeleton/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/blaineanderson/Coding/CRAE_2019_Skeleton/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/blaineanderson/Coding/CRAE_2019_Skeleton/client/src/App.js\";\n// Import React and allow it to extend Components.\nimport React, { Component } from 'react'; // Import the css file.\n\nimport './App.css'; // Create the Class 'App' and allow it to be called as a component from other parts of the client. I.E. index.js.\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      messages: []\n    };\n    _this.getInfoFromApi =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/example').then(function (response) {\n                return response.json();\n              });\n\n            case 2:\n              response = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    // {this.state.messages.map( message => {\n    //   return <li key={message.id}>{message.message}</li>\n    // })}\n    value: function render() {\n      var displayButton;\n\n      if (this.state.toggleButtonOn) {\n        displayButton = React.createElement(\"button\", {\n          onClick: this.getInfoFromApi,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"Click here to get data from the backend!\");\n      } else {\n        displayButton = null;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, displayButton, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/blaineanderson/Coding/CRAE_2019_Skeleton/client/src/App.js"],"names":["React","Component","App","state","messages","getInfoFromApi","fetch","then","response","json","displayButton","toggleButtonOn"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP,C,CAEA;;IACMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAACC,MAAAA,QAAQ,EAAE;AAAX,K;UAaRC,c;;;;6BAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQC,KAAK,CAAC,UAAD,CAAL,CACtBC,IADsB,CACjB,UAAAC,QAAQ,EAAI;AACd,uBAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,eAHsB,CADR;;AAAA;AACTD,cAAAA,QADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASf;AACA;AACA;6BAEO;AACP,UAAIE,aAAJ;;AACA,UAAI,KAAKP,KAAL,CAAWQ,cAAf,EAA+B;AAC7BD,QAAAA,aAAa,GAAG;AAAQ,UAAA,OAAO,EAAE,KAAKL,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAAhB;AACD,OAFD,MAEO;AACLK,QAAAA,aAAa,GAAG,IAAhB;AACD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,aADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAOD;;;;EA1CeT,S;;AA4CjB;AAGD,eAAeC,GAAf","sourcesContent":["// Import React and allow it to extend Components.\nimport React, { Component } from 'react';\n// Import the css file.\nimport './App.css';\n\n// Create the Class 'App' and allow it to be called as a component from other parts of the client. I.E. index.js.\nclass App extends Component {\n  state = {messages: []}\n\n  async componentDidMount() {\n\n    // const response = await fetch('/example')\n    // .then(response => {\n    //     return response.json()\n    // });\n    // console.log('Messages: ' + response)\n    // console.log('Messages: ' + Object.keys(response))\n    // await this.setState({messages: response})\n  };\n\n  getInfoFromApi = async () => {\n    const response = await fetch('/example')\n    .then(response => {\n        return response.json()\n    });\n\n\n  };\n\n    // {this.state.messages.map( message => {\n    //   return <li key={message.id}>{message.message}</li>\n    // })}\n\n  render() {\n    let displayButton;\n    if (this.state.toggleButtonOn) {\n      displayButton = <button onClick={this.getInfoFromApi}>Click here to get data from the backend!</button>\n    } else {\n      displayButton = null;\n    }\n\n    return (\n      <div>\n        {displayButton}\n        <ul>\n        </ul>\n      </div>\n    );\n  };\n\n};\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}